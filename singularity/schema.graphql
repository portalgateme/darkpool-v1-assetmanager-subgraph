type Deposit @entity(immutable: true) {
  id: Bytes!
  noteOut: Bytes! # bytes32
  amount: BigInt! # uint256
  asset: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Join @entity(immutable: true) {
  id: Bytes!
  nullifierIn1: Bytes! # bytes32
  nullifierIn2: Bytes! # bytes32
  noteOut1: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type JoinSplit @entity(immutable: true) {
  id: Bytes!
  nullifierIn1: Bytes! # bytes32
  nullifierIn2: Bytes! # bytes32
  noteOut1: Bytes! # bytes32
  noteOut2: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Split @entity(immutable: true) {
  id: Bytes!
  nullifierIn: Bytes! # bytes32
  noteOut1: Bytes! # bytes32
  noteOut2: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  nullifierIn: Bytes! # bytes32
  noteOut: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity(immutable: true) {
  id: Bytes!
  nullifierIn: Bytes! # bytes32
  amount: BigInt! # uint256
  asset: Bytes! # address
  recipient: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
